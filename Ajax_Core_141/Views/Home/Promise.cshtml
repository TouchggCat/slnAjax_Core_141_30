
@{
    ViewData["Title"] = "Promise";
}

<h1>Promise</h1>

@section Scripts{
    <script>
    //setTimeout(function () {
    //    console.log('A');
    //    setTimeout(function () {
    //        console.log('B');
    //        setTimeout(function () {
    //            console.log('C');
    //        }, 1000);
    //    }, 1000);
    //}, 1000);

    //建立Promise物件
    //const promise = new Promise((resolve, reject) => {
    //    //非同步的程式碼
    //    const num = Math.random() > 0.5 ? 1 : 0;
    //    console.log(num);
    //    if (num) {
    //        resolve("成功")
    //    } else {
    //        reject("失敗")
    //    }
    //})

    ////使用Promise物件
    //promise
    //    .then((result) => {
    //        console.log(result);
    //    })
    //    .catch((err) => {
    //        console.log(err);
    //    })
    //    .finally(() => {
    //        console.log("end");
    //    })

    function printSomething(data) {
        const promise = new Promise((resolve, reject) => {     //resolve由then(data接收)
            setTimeout(function () { resolve(data) }, 1000)      //resolve(data)丟給.then(data)
             /* setTimeout(() => { resolve(data) }, 1000)*/
        })
        return promise;              //這樣寫才點的出then
    }

        printSomething("A")    //參數A傳給function printSomething(data)的data
        .then((data) => {
            console.log(data);
            return printSomething("B");
        })
        .then((data) => {
            console.log(data);
            return printSomething("C");
        })
        .then((data) => {
            console.log(data);
        })
    </script>

}